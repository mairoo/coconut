spring:
  application:
    name: pincoin
  data:
    redis:
      host: pincoin-redis  # 도커 redis 컨테이너 이름
      port: 6379 # 컨테이너 내부 포트 접근 가능
      repositories: # RedisTemplate 사용, Redis Repository 미사용
        enabled: false
    web:
      pageable:
        default-page-size: 20  # 기본 페이지 사이즈
        max-page-size: 200 # 최대 페이지 사이즈값을 기본값과 동일하게
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgresql:5432/database
    username: username
    password: password
    hikari:
      connection-init-sql: "SET TIME ZONE 'Asia/Seoul'"
  jpa:
    hibernate:
      ddl-auto: validate # (spring.jpa.generate-ddl 옵션 미사용)
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        type.descriptor.sql: trace
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
    open-in-view: false # 트랜잭션 경계 설정

keycloak:
  realm: pincoin-local
  client-id: pincoin-api-client
  client-secret: your-client-secret
  internal-url: http://keycloak:8080 # 내부 API 호출용 (컨테이너 간 통신)
  public-url: http://localhost:8081 # 외부 공개용 (브라우저, JWT 검증)
  timeout: 5000
  cookie-domains: # 도메인에 프로토콜 및 포트번호 미포함, 서브도메인으로 지정하면 다른 서브도메인에서 접근 불가
    - localhost
  allowed-redirect-uris: # OAuth2 Authorization Code Flow 허용되는 redirect URI 목록
    # 개발환경
    - "http://localhost:3000/auth/callback"
    - "http://localhost:3001/auth/callback"
    - "http://localhost:*/auth/callback" # 포트 와일드카드 지원

    # 운영환경 예시
    # - "https://yourdomain.com/auth/callback"
    # - "https://*.yourdomain.com/auth/callback" # 서브도메인 지원
    # - "https://app.yourdomain.com/auth/*" # 경로 와일드카드

web-config:
  cors:
    allowed-origins: http://localhost:3000,http://localhost:8080
    allowed-methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
    allowed-headers: '*'
    max-age: 3600

auth:
  crypto:
    # AES 암호화를 위한 16바이트 키
    # openssl rand -base64 16
    secret-key: "mySecretKey12345"

  email:
    # 허용할 이메일 도메인 리스트 (빈 리스트면 모든 도메인 허용)
    allowed-domains:
      - gmail.com
      - naver.com
      - daum.net
      - kakao.com
      - outlook.com
      - hotmail.com
      - yahoo.com
      - nate.com

    # 차단할 이메일 도메인 리스트 (일회용 이메일 서비스)
    blocked-domains:
      - 10minutemail.com
      - tempmail.org
      - guerrillamail.com
      - mailinator.com
      - throwaway.email
      - temp-mail.org
  signup:
    redis:
      signup-prefix: "signup:"
      ip-limit-prefix: "signup_ip:"
      email-lock-prefix: "signup_lock:"

    limits:
      verification-ttl: PT24H # 24시간 (ISO-8601 Duration)
      max-daily-signups-per-ip: 5 # IP당 일일 가입 제한
      email-lock-duration: PT5M # 5분 (이메일 락 지속시간)
      ip-limit-reset-duration: PT24H # 24시간

aws:
  s3:
    region: ap-northeast-2 # 아시아 태평양 서울
    bucket-name: dummy-bucket
    access-key: dummy-access-key
    secret-key: dummy-secret-key

recaptcha:
  site-key: "frontend-site-key"
  secret-key: "backend-secret-key"
  verify-url: "https://www.google.com/recaptcha/api/siteverify"
  timeout: 5000 # 밀리초
  enabled: true # 사용 여부
  min-score: 0.5  # reCAPTCHA v3 최소 점수 (0.0 ~ 1.0)

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    tags:
      application: ${spring.application.name:api}
      environment: prod # 개발환경은 local

notification:
  mailgun:
    base-url: https://api.mailgun.net
    key: mailgun-domain-sending-api-key
    domain: mg.example.com
    from: 발신전용 <no-reply@example.com>

logging:
  level:
    root: INFO # 운영 WARN
    org.hibernate.SQL: DEBUG  # SQL 로그 레벨 / 운영 WARN
    org.hibernate.orm.jdbc.bind: TRACE  # 바인딩 파라미터 로그 레벨 / 운영 WARN
    kr.pincoin.api: DEBUG # 운영 INFO
    org.springframework.web: DEBUG
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: TRACE
  file:
    name: /app/logs/application.log